version: '3.7'

services:
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    container_name: prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./alert.yml:/etc/prometheus/alert.yml
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - node_exporter
    networks:
      - elastic

  node_exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION:-latest}
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro'
    networks:
      - elastic

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - elastic

  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile-elasticsearch
      args:
        version: ${ES_VERSION:-7.12.1}
    container_name: elasticsearch
    ports:
      - "127.0.0.1:9200:9200"
    environment:
      - network.host=0.0.0.0
      - discovery.type=single-node
      - "path.repo=/mnt/esbackup"
      - "ES_JAVA_OPTS=-Xmx1G -Xms1G"
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=${ES_ADMIN_PASSWORD:-changeme}
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - /Volumes/esbackup:/mnt/esbackup
    networks:
      - elastic

  kibana:
    image: "docker.elastic.co/kibana/kibana:${ES_VERSION:-7.12.1}"
    container_name: kibana
    ports:
      - "127.0.0.1:5601:5601"
    depends_on:
      - elasticsearch
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      SERVER_HOST: "0.0.0.0"
      LOGGING_QUIET: "true"
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ES_ADMIN_PASSWORD:-changeme}
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elastic

  agent:
    platform: linux/amd64
    image: "docker.elastic.co/beats/elastic-agent:${ES_VERSION:-7.12.1}"
    container_name: agent
    volumes:
      - ./elastic-agent.yml:/usr/share/elastic-agent/elastic-agent.yml
    command: ["-e", "-v"]
    environment:
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ES_ADMIN_PASSWORD:-changeme}
    networks:
      - elastic

volumes:
  prometheus-data: {}
  grafana_data: {}
  esdata: {}

networks:
  elastic:
    driver: bridge
